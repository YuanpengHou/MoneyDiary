{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nclass ExpenseService {\n  constructor(_httpClient) {\n    this._httpClient = _httpClient;\n    this.getUrl = \"http://localhost:8080/api/v1/expenses\";\n  }\n  getExpenses() {\n    return this._httpClient.get(this.getUrl).pipe(map(response => response));\n  }\n  saveExpense(expense) {\n    return this._httpClient.post(this.getUrl, expense);\n  }\n  getExpense(id) {\n    return this._httpClient.get(`${this.getUrl}/${id}`).pipe(map(response => response));\n  }\n  deleteExpense(id) {\n    return this._httpClient.delete(`${this.getUrl}/${id}`, {\n      responseType: 'text'\n    });\n  }\n}\nExpenseService.ɵfac = function ExpenseService_Factory(t) {\n  return new (t || ExpenseService)(i0.ɵɵinject(i1.HttpClient));\n};\nExpenseService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ExpenseService,\n  factory: ExpenseService.ɵfac,\n  providedIn: 'root'\n});\nexport { ExpenseService };","map":{"version":3,"names":["map","ExpenseService","constructor","_httpClient","getUrl","getExpenses","get","pipe","response","saveExpense","expense","post","getExpense","id","deleteExpense","delete","responseType","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Administrator\\Desktop\\Projects\\MoneyDiary\\expense-tracker-frontend\\src\\app\\services\\expense.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Expense } from '../models/expense';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ExpenseService {\r\n\r\n  private getUrl: string = \"http://localhost:8080/api/v1/expenses\";\r\n\r\n  constructor(private _httpClient: HttpClient) { }\r\n\r\n  getExpenses(): Observable<Expense[]> {\r\n    return this._httpClient.get<Expense[]>(this.getUrl).pipe(\r\n      map(response => response)\r\n    )\r\n  }\r\n\r\n  saveExpense(expense: Expense): Observable<Expense> {\r\n    return this._httpClient.post<Expense>(this.getUrl, expense);\r\n  }\r\n\r\n  getExpense(id: number): Observable<Expense> {\r\n    return this._httpClient.get<Expense>(`${this.getUrl}/${id}`).pipe(\r\n      map(response => response)\r\n    )\r\n  }\r\n\r\n  deleteExpense(id: number): Observable<any> {\r\n    return this._httpClient.delete(`${this.getUrl}/${id}`, {responseType: 'text'});\r\n  }\r\n}\r\n\r\n"],"mappings":"AAGA,SAASA,GAAG,QAAQ,gBAAgB;;;AAGpC,MAGaC,cAAc;EAIzBC,YAAoBC,WAAuB;IAAvB,KAAAA,WAAW,GAAXA,WAAW;IAFvB,KAAAC,MAAM,GAAW,uCAAuC;EAEjB;EAE/CC,WAAWA,CAAA;IACT,OAAO,IAAI,CAACF,WAAW,CAACG,GAAG,CAAY,IAAI,CAACF,MAAM,CAAC,CAACG,IAAI,CACtDP,GAAG,CAACQ,QAAQ,IAAIA,QAAQ,CAAC,CAC1B;EACH;EAEAC,WAAWA,CAACC,OAAgB;IAC1B,OAAO,IAAI,CAACP,WAAW,CAACQ,IAAI,CAAU,IAAI,CAACP,MAAM,EAAEM,OAAO,CAAC;EAC7D;EAEAE,UAAUA,CAACC,EAAU;IACnB,OAAO,IAAI,CAACV,WAAW,CAACG,GAAG,CAAU,GAAG,IAAI,CAACF,MAAM,IAAIS,EAAE,EAAE,CAAC,CAACN,IAAI,CAC/DP,GAAG,CAACQ,QAAQ,IAAIA,QAAQ,CAAC,CAC1B;EACH;EAEAM,aAAaA,CAACD,EAAU;IACtB,OAAO,IAAI,CAACV,WAAW,CAACY,MAAM,CAAC,GAAG,IAAI,CAACX,MAAM,IAAIS,EAAE,EAAE,EAAE;MAACG,YAAY,EAAE;IAAM,CAAC,CAAC;EAChF;;AAxBWf,cAAc,C;mBAAdA,cAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdnB,cAAc,C;SAAdA,cAAc;EAAAoB,OAAA,EAAdpB,cAAc,CAAAqB,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEPtB,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}